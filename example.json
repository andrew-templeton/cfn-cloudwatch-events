{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Custom::CloudWatchEvents Resources sample Template",
  "Parameters": {
    "CloudWatchEventsRuleCustomResourceLambdaName": {
      "Type": "String",
      "Default": "cfn-cloudwatch-events-rule-0-1-0",
      "Description": "The name of the CloudWatch Events Rule Lambda you deployed to test this stack."
    },
    "CloudWatchEventsTargetCustomResourceLambdaName": {
      "Type": "String",
      "Default": "cfn-cloudwatch-events-target-0-1-0",
      "Description": "The name of the CloudWatch Events Target Lambda you deployed to test this stack."
    },
    "CloudWatchEventsRuleName": {
      "Type": "String",
      "Default": "sample-rule",
      "Description": "The name of the CloudWatch Rule you will make",
      "AllowedPattern": "^[\\.\\-_A-Za-z0-9]+$"
    },
    "CloudWatchEventsRuleScheduleExpression": {
      "Type": "String",
      "Default": "rate(5 minutes)",
      "Description": "The ScheduleExpression for the CloudWatch Events Rule",
      "AllowedPattern": "^(rate\\(((1 (hour|minute|day))|(\\d+ (hours|minutes|days)))\\))|(cron\\(\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:[1-9]|1[012])(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[0-6])(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:[0-6])(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?)*))\\))$"
    },
    "CloudWatchEventsRuleState": {
      "Type": "String",
      "Default": "ENABLED",
      "Description": "Whether or not to enable the CloudWatch Events Rule",
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    },
    "EventTargetStaticInputValue": {
      "Type": "String",
      "AllowedPattern": "^\\w+$",
      "Description": "This is a word-charater only value which will be mapped into a Lambda target and logged out for inspection and validation.",
      "Default": "staticValue"
    }
  },
  "Conditions": {
  },
  "Resources": {
    "MyCloudWatchEventsRule": {
      "DependsOn": [
        "LambdaPermissionAllowingCloudWatchEventsInvocation"
      ],
      "Type": "Custom::CloudWatchEventsRule",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            ":",
            [
              "arn",
              "aws",
              "lambda",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              "function",
              {
                "Ref": "CloudWatchEventsRuleCustomResourceLambdaName"
              }
            ]
          ]
        },
        "Name": {
          "Ref": "CloudWatchEventsRuleName"
        },
        "Description": "An event created with the Example Template from cfn-cloudwatch-events-rule.",
        "ScheduleExpression": {
          "Ref": "CloudWatchEventsRuleScheduleExpression"
        },
        "State": {
          "Ref": "CloudWatchEventsRuleState"
        }
      }
    },
    "MyCloudWatchEventsTarget": {
      "DependsOn": [
        "EventTargetLambda",
        "MyCloudWatchEventsRule"
      ],
      "Type": "Custom::CloudWatchEventsTarget",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            ":",
            [
              "arn",
              "aws",
              "lambda",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              "function",
              {
                "Ref": "CloudWatchEventsTargetCustomResourceLambdaName"
              }
            ]
          ]
        },
        "Input": {
          "Fn::Join": [
            "",
            [
              "{\n",
              "  \"staticKey\": \"",
              {
                "Ref": "EventTargetStaticInputValue"
              },
              "\"\n",
              "}"
            ]
          ]
        },
        "RuleArn": {
          "Ref": "MyCloudWatchEventsRule"
        },
        "TargetArn": {
          "Fn::GetAtt": [
            "EventTargetLambda",
            "Arn"
          ]
        }
      }
    },
    "EventTargetLambda": {
      "DependsOn": [
        "EventTargetLambdaLoggingRole"
      ],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "exports.handler = function(event, context) {",
                "  console.log(event);",
                "  context.done();",
                "};",
                ""
              ]
            ]
          }
        },
        "Description": "Lambda CloudWatch Events Target, logging sink for test.",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "EventTargetLambdaLoggingRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs",
        "Timeout": 3
      }
    },
    "EventTargetLambdaLoggingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::Region"
                  },
                  {
                    "Ref": "AWS::StackName"
                  },
                  "EventTargetLambdaLoggingRole"
                ]
              ]
            },
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaPermissionAllowingCloudWatchEventsInvocation": {
      "DependsOn": [
        "EventTargetLambda"
      ],
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "EventTargetLambda"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn" : {
          "Fn::Join": [
            "",
            [
              "arn:aws:events:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "CloudWatchEventsRuleName"
              }
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "RuleInConsole": {
      "Description": "The URL for the CloudWatch Events Rule in the AWS Console",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/cloudwatch/home?region=",
            {
              "Ref": "AWS::Region"
            },
            "#rules:name=",
            {
              "Ref": "CloudWatchEventsRuleName"
            }
          ]
        ]
      }
    },
    "TargetLogsInConsole": {
      "Description": "The Console URL for the CloudWatch Logs Group for the Lambda the CloudWatch Events Target maps to.",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/cloudwatch/home?region=",
            {
              "Ref": "AWS::Region"
            },
            "#logStream:group=%252Faws%252Flambda%252F",
            {
              "Ref": "EventTargetLambda"
            }
          ]
        ]
      }
    }
  }
}
